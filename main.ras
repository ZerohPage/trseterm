program C64Project;
@use "RS232"
var
	// vars -- //
	i : byte=0;
	title : string = "TRSETERM VERSION 0.1";
	inkey : byte = 0;
	// -- constants -- //
	const CASE_SELECT : address = 53272;
	// -- forward declarations -- //
	procedure term_read_keyboard();
	

	// -----------------------------------------------------------------------------//
	// Options menu
	// -----------------------------------------------------------------------------//	
	procedure ShowMenu();
	var
		menu_line1 : string = "1. 2400 BAUD";
		menu_line2 : string = "2. 1200 BAUD";
		menu_line3 : string = "3. 300  BAUD";
	begin
		moveto(1,3,$04);
		printstring(menu_line1,0,12);
		moveto(1,5,$04);
		printstring(menu_line2,0,12);
		moveto(1,7,$04);
		printstring(menu_line3,0,12);
		while (inkey = 0) do 
		begin
			term_read_keyboard();
		end;
		if (inkey = 49) then RS232_set_baudrate(BAUD_2400)
		else 
		if (inkey = 50) then RS232_set_baudrate(BAUD_1200)
		else
		if (inkey = 51) then RS232_set_baudrate(BAUD_300)
	end;
	// -----------------------------------------------------------------------------//
	// Setup the terminal
	// -----------------------------------------------------------------------------//	
	procedure SetupTerminal();
	begin
		// -- initialize rs232 -- //
		RS232_Init();
	end;
	
	// -----------------------------------------------------------------------------//
	// non-rs232 keyboard read
	// -----------------------------------------------------------------------------//
	Procedure term_read_keyboard();
	begin
		call(GETIN);
		asm("	sta inkey");
	end;

begin
	// -- clear the screen -- //
	SCREEN_BG_COL := 0;
	SCREEN_FG_COL := 0;
	CASE_SELECT := 23;
	ClearScreen($20, ^$0400);
	// -- move to position x = 1 y = y in 1st bank $0400 (screen memory)
	moveto(1,1,$04);
	// -- print out the title string -- //
	printstring(title,0,20);
	// -- show the menu -- //
	ShowMenu();
	
	ClearScreen($20, ^$0400);
	//moveto(0,0,$04);
  	//printdecimal(inkey,1);          // -- debug stuff -- //
	SetupTerminal();
	while (true) do 
	begin
		// -- call read_byte (result is stored in RS232_RS232_BYTE_IN) -- //
		RS232_read_byte();
		// -- if a byte is read, output it to the screen -- //
		// -- otherwise read the keyboard,send the byte to the rs232 channel and display on screen -- //
		if (RS232_RS232_BYTE_IN <> 0) then
		begin
			call(CHROUT);
		end else
		begin
			RS232_read_keyboard();
		end;
	end;
	Loop(); 
end.

 